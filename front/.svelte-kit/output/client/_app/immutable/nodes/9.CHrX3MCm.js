import{s as _,a as w,n as p,o as D}from"../chunks/scheduler.BfJEPAwo.js";import{S as A,i as I,e as u,s as $,v as M,b as f,g as y,d as m,f as P,h as v,n as S,a as b}from"../chunks/index.CbF2QnM9.js";function T(r){let t,i="",s,a,e,c='<div class="graph1 svelte-tr8um6"><div id="graph" style="width:100%; height:400px;"></div></div>';return{c(){t=u("script"),t.innerHTML=i,a=$(),e=u("div"),e.innerHTML=c,this.h()},l(l){const o=M("svelte-178nwy",document.head);t=f(o,"SCRIPT",{src:!0,"data-svelte-h":!0}),y(t)!=="svelte-1nxlm2a"&&(t.innerHTML=i),o.forEach(m),a=P(l),e=f(l,"DIV",{class:!0,"data-svelte-h":!0}),y(e)!=="svelte-1n78l6b"&&(e.innerHTML=c),this.h()},h(){w(t.src,s="https://d3js.org/d3.v7.min.js")||v(t,"src",s),v(e,"class","container svelte-tr8um6")},m(l,o){S(document.head,t),b(l,a,o),b(l,e,o)},p,i:p,o:p,d(l){l&&(m(a),m(e)),m(t)}}}function C(r){const t={albania:"Albania",austria:"Austria",belgium:"Bélgica",bulgary:"Bulgaria",croatia:"Croacia",cyprus:"Chipre",czech_republic:"República Checa",denmark:"Dinamarca",estonia:"Estonia",finland:"Finlandia",france:"Francia",germany:"Alemania",greece:"Grecia",hungary:"Hungría",ireland:"Irlanda",iceland:"Islandia",italy:"Italia",latvia:"Letonia",lithuania:"Lituania",luxembourg:"Luxemburgo",malta:"Malta",netherlands:"Países Bajos",poland:"Polonia",portugal:"Portugal",romania:"Rumania",slovakia:"Eslovaquia",slovenia:"Eslovenia",spain:"España",sweden:"Suecia",united_kingdom:"Reino Unido"};return r.map(i=>({...i,geo:t[i.geo]||i.geo}))}function E(r,t){const i=new Set(r.map(o=>o.geo)),s=new Set(t.map(o=>o.geo)),a=new Set([...i].filter(o=>s.has(o))),e=r.filter(o=>a.has(o.geo)),c=t.filter(o=>a.has(o.geo));return[...e,...c]}function L(r){const t=r.reduce((a,e)=>(a[e.geo]||(a[e.geo]={pib:0,deathsInFlights:0,volgdp:0,road_deaths_per_million_inhabitants:0}),"frequency"in e&&(a[e.geo].pib+=e.obs_value),e.flights_passangers&&(a[e.geo].deathsInFlights+=e.flights_passangers),a),{}),i=Object.entries(t).map(([a,{pib:e,deathsInFlights:c,volgdp:l,road_deaths_per_million_inhabitants:o}])=>({country:a,pib:e,deathsInFlights:c}));return{categories:i.map(a=>a.country),series:[{name:"PIB Acumulado",data:i.map(a=>a.pib)},{name:"Muertes en Aviones",data:i.map(a=>a.deathsInFlights)}]}}function O(r){const t={top:20,right:30,bottom:30,left:70},i=800-t.left-t.right,s=400-t.top-t.bottom,a=d3.select("#graph").append("svg").attr("width",i+t.left+t.right).attr("height",s+t.top+t.bottom).append("g").attr("transform",`translate(${t.left},${t.top})`),e=d3.scaleBand().domain(r.categories).range([0,i]).padding(.1),c=d3.scaleLinear().domain([0,d3.max(r.series[0].data)]).range([s,0]),l=d3.scaleLinear().domain([0,d3.max(r.series[1].data)]).range([s,0]),o=d3.scaleOrdinal().domain(["PIB Acumulado","Muertes en Aviones"]).range(["#1f77b4","#ff7f0e"]);a.append("g").attr("transform",`translate(0, ${s})`).call(d3.axisBottom(e)),a.append("g").call(d3.axisLeft(c).tickFormat(d=>`${d}`)),a.append("g").call(d3.axisRight(l).tickFormat(d=>`${d}`)).attr("transform",`translate(${i}, 0)`);const g=a.selectAll(".bar").data(r.categories).enter().append("g").attr("class","bar").attr("transform",d=>`translate(${e(d)},0)`);g.append("rect").attr("y",d=>c(r.series[0].data[r.categories.indexOf(d)])).attr("height",d=>s-c(r.series[0].data[r.categories.indexOf(d)])).attr("width",e.bandwidth()/2).attr("fill",o("PIB Acumulado")),g.append("rect").attr("y",d=>l(r.series[1].data[r.categories.indexOf(d)])).attr("height",d=>s-l(r.series[1].data[r.categories.indexOf(d)])).attr("width",e.bandwidth()/2).attr("transform",`translate(${e.bandwidth()/2}, 0)`).attr("fill",o("Muertes en Aviones")),a.append("text").attr("x",i/2).attr("y",t.bottom/100).style("text-anchor","middle").text("PIB Acumulado vs Muertes en Aviones"),a.append("text").attr("transform","rotate(-90)").attr("y",0-t.left).attr("x",0-s/2).attr("dy","1em").style("text-anchor","middle").text("PIB Acumulado"),a.append("text").attr("transform",`translate(${i}, ${s/2}) rotate(90)`).attr("dy","1em").style("text-anchor","middle").text("Muertes en Aviones")}function B(r){let t="/api/v2/vehicles-stock",i="/api/v2/gdp-growth-rates",s="",a="",e,c={};D(async()=>{await x(),e=await o(),c=await d(),c=C(c);let n=E(e,c);console.log("DATOS COMUNES: "+JSON.stringify(n)),n=L(n),O(n)});async function l(){try{(await fetch(t+"/loadInitialData",{method:"GET"})).ok?a="Datos Cargados Correctamente":s="La base de datos no está vacía"}catch(n){s=n}}async function o(){try{await l();let n=await fetch(`${t}?limit=10000`,{method:"GET",headers:{"Cache-Control":"no-cache",Pragma:"no-cache"}});if(n.ok){let h=await n.json();return console.log("DATOS TLR: "+JSON.stringify(h)),h}else n.status==404?s="No hay datos1 en la base de datos1":s=`Error ${n.status}: ${n.statusText}`}catch(n){s=n}}async function g(){try{(await fetch(i+"/loadInitialData",{method:"GET"})).ok&&(a="Datos cargados correctamente",s="")}catch(n){s=n}}async function d(){try{await g(),console.log("Datos correctamente cargados");let n=await fetch(i,{method:"GET"});if(n.ok){let h=await n.json();return console.log("API MRF: "+JSON.stringify(h)),s="",h}else n.status==404?s="No hay datos en la base de datos":s=`Error ${n.status}: ${n.statusText}`}catch(n){s=n}}async function x(){try{await l(),await g()}catch(n){s=n}}return[]}class G extends A{constructor(t){super(),I(this,t,B,T,_,{})}}export{G as component};
